{"version":3,"sources":["i18/index.js","utils/utils.js","lib/function/round.js","lib/function/left.js","lib/function/right.js","lib/function/trim.js","lib/function/ignore.js","lib/function/substring.js","lib/function/absolute.js","lib/function/power.js","lib/function/concat.js","lib/index.js","App.js","index.js"],"names":["i18Get","key","lang","S","I18","props","this","tkey","params","React","Component","language","msg","message","info","error","Round","state","className","id","value","params1","defaultActiveFirstOption","onChange","e","setState","placeholder","utils","notFoundContent","attributes","min","maxLength","type","params2","Option","Select","ops","operations","Operation","variables","push","options","map","d","source_alias","name","onClick","getValue","constants","numberFunctions","stringFunctions","dateFunctions","allFunctions","i","length","args","param","func","getAttributes","onAttributesChange","bind","count","getNumberOfArgs","getFuncValue","prevState","undefined","params3","invalidFuncArgs","valid","curDateFound","otherOperationsFound","numReg","indexOf","numberOfBracket","search","test","validate","reg","new_val","getFinalStringValue","RegExp","replace","startsWith","endsWith","val","data","getOperations","column","fixedVal","target","getFunctions","getFunctionalArgsColumns","addFunction","getStringValue","clearVal","content","variableName","addVariable","title","trigger","visible","variableNameVisible","onVisibleChange","onApply","alias","findIndex","p","source_name","dd","pop","App","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4e6a8ce.chunk.js","sourcesContent":["import React from 'react';\n\nconst dev = 'de';\nconst langnow = '';\n\n// function evalTemplate(strans, params) {\n//     let tString = strans;\n//     if (_.isObject(params) && _.isObject(params.S)) {\n//         Object.keys(params.S).forEach((k) => {\n//             tString = tString.replace(`\\${S.${k}}`, params.S[k]);\n//         });\n//     }\n//     return tString;\n// }\n\nexport function i18Get(key, lang, S) {\n    // const state = Store.getState();\n    // const trans = state.translations.data.translations? state.translations.data.translations[lang] : '';\n    // try {\n    //     let transText = key;\n    //     if (!_.isEmpty(trans) && key in trans) {\n    //         transText = trans[key];\n    //     } else if (key in this.dev) {\n    //         transText = this.dev[key];\n    //     }\n    //     // transText = '' + transText + '';\n    //     return evalTemplate(transText, { S });\n    // } catch (err) {\n    //     // console.log(err)\n    //     // nothing to catch\n    // }\n    return key;\n}\n\nclass I18 extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        const key = this.props.tkey;\n        const language = 'en';\n        const S = this.props.params;\n        return i18Get(key, language, S);\n    }\n}\n\nexport default I18;\n","import { message } from 'antd';\nvar language = 'en';\n\nvar getLanguage = () => {\n    return language;\n};\n\nvar setLanguage = (lang) => {\n    language = lang;\n};\n\nvar showSuccess = (msg) => {\n    message.success(msg);\n}\n\nvar showInfo = (msg) => {\n    message.info(msg);\n}\n\nvar showError = (msg) => {\n    message.error(msg);\n}\n\n\n\nexport default {\n    showSuccess, \n    showInfo, \n    showError, \n    getLanguage, \n    setLanguage, \n};","import React, { Component } from 'react'\nimport I18,{i18Get} from '../../i18';\nimport utils from '../../utils/utils';\nimport { Select, InputNumber } from 'antd';\n\nclass Round extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n\n    render() {\n     \n      return (<div>\n        <div className=\"w_100 display_inline_block\">\n        <div className=\"width-48-px display_inline_block margin-top-5 margin-bottom-10\">\n            <I18 tkey='Round' />\n            </div>\n            <div className=\"width-160-px  display_inline_block margin-bottom-10\">\n            <Select \n                id=\"type\"\n                value={this.state.params1}\n                className=\"w_100\"\n                defaultActiveFirstOption={false}\n                onChange={(e) => {this.setState({params1:e}); this.props.onChange(e, 'params1')}}\n                placeholder={i18Get('Select Variable', utils.getLanguage())}\n                notFoundContent={i18Get('Not Found', utils.getLanguage())} >\n                {this.props.attributes}\n            </Select>\n            </div>\n            <div className=\"margin-left-5 width-35-px margin-top-5 display_inline_block padding-left-8 \">\n            <I18 tkey='to' />\n            </div>\n            <div className=\"width-60-px  display_inline_block margin-right-10\">\n            <InputNumber   min={0} maxLength={8} type='Number' onChange={(e) => this.props.onChange(e, 'params2')}/>\n            </div>\n            <div className=\"width-110-px margin-top-5 display_inline_block  \">\n            <I18 tkey='decimal places' />\n            </div>\n            </div>\n            \n           \n            \n           \n      \n      </div>\n      )\n    }\n}\n\n\n\nexport default Round;","import React, { Component } from 'react'\nimport I18,{i18Get} from '../../i18';\nimport utils from '../../utils/utils';\nimport { Select, InputNumber } from 'antd';\n\nclass Round extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n\n    render() {\n     \n      return ( <div>\n        <div className=\"margin-bottom-6\">\n        <div className=\"width-50-px  display_inline_block margin-top-5 margin-bottom-10\">\n            <I18 tkey='First' />\n          </div>\n          <div className=\"width-60-px  display_inline_block margin-bottom-10\">\n            <InputNumber className=\"\" min={0} maxLength=\"8\" type='Number' onChange={(e) => this.props.onChange(e, 'params2')}/>\n           </div>\n          <div className=\"width-110-px display_inline_block margin-top-5  margin-left-10 margin-bottom-10\">\n            <I18 tkey='characters from' />\n          </div>\n           \n           \n           \n            \n            <div className=\"width-160-px display_inline_block\">\n            <Select \n                id=\"type\"\n                value={this.state.params1}\n                className=\"w_100\"\n                defaultActiveFirstOption={false}\n                onChange={(e) => {this.setState({params1:e}); this.props.onChange(e, 'params1')}}\n                placeholder={i18Get('Select Variable', utils.getLanguage())}\n                notFoundContent={i18Get('Not Found', utils.getLanguage())} >\n                {this.props.attributes}\n            </Select>\n            </div>\n            </div>\n            \n     \n      </div>\n      )\n    }\n}\n\n\n\nexport default Round;","import React, { Component } from 'react'\nimport I18,{i18Get} from '../../i18';\nimport utils from '../../utils/utils';\nimport { Select, InputNumber } from 'antd';\n\nclass Round extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n\n    render() {\n     \n      return (<div>\n        <div className=\"\">\n        <div className=\"width-35-px display_inline_block margin-top-5 margin-bottom-10 \">\n         <I18 tkey='Last' />\n         </div>\n         <div className=\"width-60-px  display_inline_block margin-bottom-10\">\n            <InputNumber  min={0} maxLength={8} className=\"\" type='Number' onChange={(e) => this.props.onChange(e, 'params2')}/>\n            </div>\n            \n            <div className=\"width-110-px display_inline_block margin-top-5  margin-left-10 margin-right-10 margin-bottom-10\">\n            <I18 tkey='characters from' />\n            </div>\n            \n            \n           \n            <div className=\"width-160-px display_inline_block \">\n            <Select \n                id=\"type\"\n                value={this.state.params1}\n                className=\"w_100\"\n                defaultActiveFirstOption={false}\n                onChange={(e) => {this.setState({params1:e}); this.props.onChange(e, 'params1')}}\n                placeholder={i18Get('Select Variable', utils.getLanguage())}\n                notFoundContent={i18Get('Not Found', utils.getLanguage())} >\n                {this.props.attributes}\n            </Select>\n            </div>\n         </div>\n          </div>\n      )\n    }\n}\n\n\nexport default Round;","import React, { Component } from 'react'\nimport I18,{i18Get} from '../../i18';\nimport utils from '../../utils/utils';\nimport { Select, Input } from 'antd';\n\nclass Round extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n\n    render() {\n     \n      return (<div className=\"margin-bottom-10\" >\n      <div className=\"width-110-px display_inline_block margin-top-5 margin-right-7\">\n            <I18 tkey='Trim spaces from' />\n            </div>\n            <div className=\"width-160-px display_inline_block\">\n            <Select \n                id=\"type\"\n                value={this.state.params1}\n                className=\"w_100\"\n                defaultActiveFirstOption={false}\n                onChange={(e) => {this.setState({params1:e}); this.props.onChange(e, 'params1')}}\n                placeholder={i18Get('Select Variable', utils.getLanguage())}\n                notFoundContent={i18Get('Not Found', utils.getLanguage())} >\n                {this.props.attributes}\n            </Select>\n            </div>\n      </div>\n      )\n    }\n}\n\n\n\nexport default Round;","import React, { Component } from 'react'\nimport I18,{i18Get} from '../../i18';\nimport utils from '../../utils/utils';\nimport { Select, InputNumber } from 'antd';\n\nclass Round extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n\n    render() {\n     \n      return (\n      <div>\n      <div className=\" w_100\">\n      <div className=\"width-50-px display_inline_block margin-top-5 padding-right-4\">\n            <I18 tkey='Ignore ' />\n            </div>\n            <div className=\"width-60-px  display_inline_block margin-bottom-10\">\n            <InputNumber className=\"\" type='Number' min={0} onChange={(e) => this.props.onChange(e, 'params2')}/>\n            </div>\n            <div className=\"width-100-px display_inline_block margin-top-5 padding-right-left-2-per\">\n            <I18 tkey='characters from' />\n            </div>\n            \n            \n            \n            \n            <div className=\"width-160-px  display_inline_block\">\n            <Select \n                id=\"type\"\n                value={this.state.params1}\n                className=\"w_100\"\n                defaultActiveFirstOption={false}\n                onChange={(e) => {this.setState({params1:e}); this.props.onChange(e, 'params1')}}\n                placeholder={i18Get('Select Variable', utils.getLanguage())}\n                notFoundContent={i18Get('Not Found', utils.getLanguage())} >\n                {this.props.attributes}\n            </Select>\n            </div>\n            </div>\n            \n     \n      </div>\n      )\n    }\n}\n\n\n\nexport default Round;","import React, { Component } from 'react'\nimport I18,{i18Get} from '../../i18';\nimport utils from '../../utils/utils';\nimport { Select, InputNumber } from 'antd';\n\nclass Round extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n\n    render() {\n     \n      return (<div>\n       \n        <div className=\"width-60-px  display_inline_block margin-bottom-10\">\n            <InputNumber   min={0} maxLength={8} type='Number' onChange={(e) => this.props.onChange(e, 'params3')}/>\n            </div>\n            <div className=\"width-160-px display_inline_block margin-top-5 text_align_center margin-bottom-10 padding-right-left-2-per\">\n            \n            <I18 tkey='characters starting at' />\n            </div>\n            <div className=\"width-60-px  display_inline_block margin-bottom-10\">\n            <InputNumber  min={0} maxLength={8}  type='Number' onChange={(e) => this.props.onChange(e, 'params2')}/>\n            </div>\n            <div className=\"width-35-px  display_inline_block margin-left-10 margin-top-5\">\n            <I18 tkey='from' />\n            </div>\n            <div className=\"width-125-px display_inline_block   \">\n            <Select \n                id=\"type\"\n                value={this.state.params1}\n                className=\"w_100\"\n                defaultActiveFirstOption={false}\n                onChange={(e) => {this.setState({params1:e}); this.props.onChange(e, 'params1')}}\n                placeholder={i18Get('Select Variable', utils.getLanguage())}\n                notFoundContent={i18Get('Not Found', utils.getLanguage())} >\n                {this.props.attributes}\n            </Select>\n            </div>\n            \n      </div>\n      \n      )\n    }\n}\n\n\nexport default Round;","import React, { Component } from 'react'\nimport I18,{i18Get} from '../../i18';\nimport utils from '../../utils/utils';\nimport { Select, Input } from 'antd';\n\nclass Round extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n\n    render() {\n     \n      return ( <div>\n          <div className=\"w_100 display_inline_block\">\n            <div className=\"width-115-px display_inline_block margin-top-5 \">\n            <I18 tkey='Absolute value of ' />\n            </div>\n            <div className=\"width-160-px padding-right-left-2-per display_inline_block\">\n            <Select \n                id=\"type\"\n                value={this.state.params1}\n                className=\"w_100\"\n                defaultActiveFirstOption={false}\n                onChange={(e) => {this.setState({params1:e}); this.props.onChange(e, 'params1')}}\n                placeholder={i18Get('Select Variable', utils.getLanguage())}\n                notFoundContent={i18Get('Not Found', utils.getLanguage())} >\n                {this.props.attributes}\n            </Select>&nbsp;\n            </div>\n\n      </div>\n      </div>\n      )\n    }\n}\n\n\n\nexport default Round;","import React, { Component } from 'react'\nimport I18,{i18Get} from '../../i18';\nimport utils from '../../utils/utils';\nimport { Select, InputNumber } from 'antd';\n\nclass Round extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n\n    render() {\n     \n      return (<div className=\"padding-bottom-10 w_100\">\n         \n            <div className=\"width-160-px display_inline_block    \">\n            <Select \n                id=\"type\"\n                value={this.state.params1}\n                className=\"w_100\"\n                defaultActiveFirstOption={false}\n                onChange={(e) => {this.setState({params1:e}); this.props.onChange(e, 'params1')}}\n                placeholder={i18Get('Select Variable', utils.getLanguage())}\n                notFoundContent={i18Get('Not Found', utils.getLanguage())} >\n                {this.props.attributes}\n            </Select>\n            </div>\n            <div className=\"width-35-px display_inline_block margin-top-5  padding-left-8\">\n              <I18 tkey='^' />\n            </div>\n            <div className=\"width-60-px  display_inline_block\">\n       \n              <InputNumber className=\"\" min={0} maxLength={8} type='Number' onChange={(e) => this.props.onChange(e, 'params2')}/>\n            </div>\n            </div>\n           \n           \n     \n      )\n    }\n}\n\n\nexport default Round;","import React, { Component } from 'react'\n\nimport I18,{i18Get} from '../../i18';\nimport utils from '../../utils/utils';\nimport { Select, Input } from 'antd';\n\nclass Round extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n\n    render() {\n     \n      return (\n          <div>\n      \n      <div className=\"w_100 display_inline_block padding-bottom-10\">\n      <div className=\"width-110px display_inline_block margin-top-5 margin-bottom-10\">\n            <I18 tkey='Concatenate' />\n            </div>\n            <div className=\"width-160-px padding-right-left-2-per display_inline_block margin-bottom-10\">\n            <Select \n                id=\"type\"\n                value={this.state.params1}\n                className=\"w_100\"\n                defaultActiveFirstOption={false}\n                onChange={(e) => {this.setState({params1:e}); this.props.onChange(e, 'params1')}}\n                placeholder={i18Get('Select Variable', utils.getLanguage())}\n                notFoundContent={i18Get('Not Found', utils.getLanguage())} >\n                {this.props.attributes}\n            </Select>\n            </div>\n            \n           \n            <div className=\"width-55-px display_inline_block margin-top-5 padding-right-left-2-per \">\n            <I18 tkey='And' />\n            </div>\n            \n            \n            <div className=\"width-160-px display_inline_block \">\n            <Select \n                id=\"type\"\n                value={this.state.params2}\n                className=\"w_100\"\n                defaultActiveFirstOption={false}\n                onChange={(e) => {this.setState({params2:e}); this.props.onChange(e, 'params2')}}\n                placeholder={i18Get('Select Variable', utils.getLanguage())}\n                notFoundContent={i18Get('Not Found', utils.getLanguage())} >\n                {this.props.attributes}\n            </Select>\n            </div>\n            </div>\n     \n      </div>\n      )\n    }\n}\n\n\n\nexport default Round;","import React, { Component } from 'react'\nimport I18,{i18Get} from '../i18';\nimport utils from '../utils/utils';\nimport {Select, Button, Input, Popover } from 'antd'\nimport constants from '../constants/condition-functions.json';\nimport Round from './function/round'\nimport Left from './function/left';\nimport Right from './function/right';\nimport Trim from './function/trim';\nimport Ignore from './function/ignore';\nimport Substring from './function/substring';\nimport Absolute from './function/absolute';\nimport Power from './function/power';\nimport Concat from './function/concat';\nimport 'antd/dist/antd.css';\nimport './main.css';\nconst Option = Select.Option\nconst ops = ['+','-','*','/','(',')'];\nconst operations = ['+','-','*','/','^']\n\nclass Operation extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value:[],\n            attributes: this.props.attributes ? this.props.attributes : [],\n            variables:[]\n        };\n    }\n    componentWillMount() {\n        if(this.props.value) {\n            this.state.value.push(this.props.value) \n        }  \n    }\n    getAttributes() {\n        let options = []\n        this.state.attributes.map(d => {\n            options.push(<Option key={d.source_alias + '.' + d.name} >{d.name}</Option>)\n        })\n        this.state.variables.map(d => {\n            options.push(<Option key={'var.' + d.name} >{d.name}</Option>)\n        })\n        return options;\n    }\n\n    getOperations() {\n        return ops.map(d=> {\n            return <button onClick={() => this.setState({value: this.getValue(d,'op')})} className='operations_ops'>{d}</button>\n        })\n    }\n\n    getFunctions() {\n        switch(this.props.type) {\n            case 'NUMBER' :\n            case 'DECIMAL' : {\n                return constants.numberFunctions.map(d => {\n                    return <Option key={d.name} >{d.name}</Option>\n                })\n            }\n            case 'STRING' : {\n                return constants.stringFunctions.map(d => {\n                    return <Option key={d.name} >{d.name}</Option>\n                })\n            }\n            case 'STRING' : {\n                return constants.stringFunctions.map(d => {\n                    return <Option key={d.name} >{d.name}</Option>\n                })\n            }\n            case 'DATE' :\n            case 'DATETIME' : {\n                return constants.dateFunctions.map(d => {\n                    return <Option key={d.name} >{d.name}</Option>\n                })\n            }\n            default: {\n                return constants.allFunctions.map(d => {\n                    return <Option key={d.name} >{d.name}</Option>\n                })\n            }\n        }\n        \n    }\n    getNumberOfArgs(name, type) {\n        switch(type) {\n            case 'STRING' : \n                for(let i =0; i < constants.stringFunctions.length; i++) {\n                    if(constants.stringFunctions[i].name === name) {\n                        return constants.stringFunctions[i].args\n                    }\n                }\n                break;\n            \n            case 'NUMBER':\n            case 'DECIMAL': \n                for(let i = 0; i < constants.numberFunctions.length; i++) {\n                    if(constants.numberFunctions[i].name === name) {\n                        return constants.numberFunctions[i].args\n                    }\n                }\n                break;\n            case 'DATE':\n            case 'DATETIME': \n                for(let i = 0; i < constants.dateFunctions.length; i++) {\n                    if(constants.dateFunctions[i].name === name) {\n                        return constants.dateFunctions[i].args\n                    }\n                }\n                break; \n            default:  \n                for(let i = 0; i < constants.allFunctions.length; i++) {\n                    if(constants.allFunctions[i].name === name) {\n                        return constants.allFunctions[i].args\n                    }\n                }\n            break;\n        }\n    }\n    onAttributesChange(e, param) {\n        this.setState({[param]: e, invalidFuncArgs:false});\n    }\n    getFunctionalArgsColumns() {\n       switch(this.state.func) {\n            case 'ROUND': {\n                    return <Round attributes={this.getAttributes()} onChange={this.onAttributesChange.bind(this)} />\n            }\n            case 'LEFT': {\n                return <Left attributes={this.getAttributes()} onChange={this.onAttributesChange.bind(this)} />\n            }\n            case 'RIGHT': {\n                return <Right attributes={this.getAttributes()} onChange={this.onAttributesChange.bind(this)} />\n            }\n            case 'TRIM': {\n                return <Trim attributes={this.getAttributes()} onChange={this.onAttributesChange.bind(this)} />\n            }\n            case 'IGNORE': {\n                return <Ignore attributes={this.getAttributes()} onChange={this.onAttributesChange.bind(this)} />\n            }\n            case 'SUBSTRING': {\n                return <Substring attributes={this.getAttributes()} onChange={this.onAttributesChange.bind(this)} />\n            }\n            case 'ABS': {\n                return <Absolute attributes={this.getAttributes()} onChange={this.onAttributesChange.bind(this)} />\n            }  \n            case 'POWER': {\n                return <Power attributes={this.getAttributes()} onChange={this.onAttributesChange.bind(this)} />\n            }\n            case 'CONCAT': {\n                return <Concat attributes={this.getAttributes()} onChange={this.onAttributesChange.bind(this)} />\n            }\n            default : {\n                return <div></div>\n            }   \n       } \n    }\n    getFuncValue() {\n        if(!this.state.func) {\n            return false\n        }\n        let value = '';\n        let count = this.getNumberOfArgs(this.state.func, this.props.type);\n        value = value + this.state.func + '('\n        for(let i = 0 ; i< count; i++) {\n            if(this.state['params'+(i+1)]) {\n                value = value + this.state['params'+(i+1)] + (i == count-1 ? '': ', ');\n            } else {\n                return false;\n            }\n        }\n        value= value + ')';\n        return value\n    }\n    addFunction() {\n        let value = this.getFuncValue() \n        let prevState = this.state;\n        if(value) {\n            prevState.value = this.getValue(value);\n            prevState.func = undefined;\n            prevState.params1 = undefined;\n            prevState.params2 = undefined;\n            prevState.params3 = undefined;\n        } else {\n            prevState.invalidFuncArgs = true;\n        }\n        this.setState(prevState)  \n    }\n    validate() {\n        let value = this.state.value;\n        let valid = true;\n        let curDateFound = false;\n        let otherOperationsFound = false;\n        let numReg = /^[0-9]*$/\n        //Check start or end with operation\n        if(operations.indexOf(value[0]) !== -1 || operations.indexOf(value[value.length - 1]) !== -1 ) {\n            valid = false;\n        }\n        //Check openClose brackets\n        let numberOfBracket = 0;\n        value.map(d => {\n            if(d === '(') {\n                numberOfBracket++;\n            }else  if( d=== ')') {\n                numberOfBracket--;\n            }\n            if(d.search('CURDATE') !== -1) {\n                curDateFound = true;\n            } else if(d !== '+' && d !== '-' && d !== '(' && d !== ')' && !numReg.test(d)) {\n                    otherOperationsFound = true\n            }\n        })\n        if(curDateFound && otherOperationsFound) {\n                valid = false;\n                utils.showError(i18Get('Current date must be followed by \"+\" or \"-\" only',utils.getLanguage()))\n                return valid;\n        }\n        if(numberOfBracket !== 0) {\n            valid = false;\n        }\n        if(!valid) {\n            utils.showError(i18Get('Invalid syntax', utils.getLanguage()))\n        }\n        return valid;\n    }\n    onApply() {\n        if(this.validate()) {\n            let value = this.getFinalStringValue(this.state.value);\n            let reg;\n            let new_val = value;\n            while (new_val.search('var.') !== -1) {\n                this.state.variables.map(d => {\n                    reg = new RegExp('var.'+d.name, 'g');\n                    new_val = new_val.replace(reg, d.value);\n                }) \n            }\n            if(new_val.search('CURDATE') !== -1 && !new_val.startsWith('(') && !new_val.endsWith(')')) {\n               new_val = `(${new_val})`\n            }\n            this.props.onChange(new_val)\n        }\n        \n    }\n    getFinalStringValue(val) {\n        let value = ''\n        val.map(d => {\n            value += ' ' + d;\n        })\n        return value\n    }\n    getValue(data, type) {\n        if(data !== '(' && data !== ')') {\n            if(type === 'op') {\n                if(operations.indexOf(this.state.value[this.state.value.length-1]) !== -1) {\n                    utils.showInfo('Operations cannot be used consecutively')\n                    return this.state.value;\n                }\n            } else if(this.state.value.length && ops.indexOf(this.state.value[this.state.value.length-1]) === -1) {\n                utils.showInfo('Operands must have operations in between')\n                return this.state.value;\n            }\n        }\n        \n        if(data) {\n            this.state.value.push(data)\n        }\n        return this.state.value;\n    }\n    render() {\n        return (\n                <div className=''>\n                    <div className='width-50-per margin-right-4per display_inline_block'>\n                        <div className='w_100 display_inline_block action_sign_container'>\n                               {this.getOperations()}     \n                        </div>\n                        <div className='w_100 operation_variable_container border-radius-0'>  \n                            <div className=\"container-fluid\">    \n                                <label className=\"\"><I18 tkey='Variable' /></label>\n                                <div className=\"row margin-bottom-10\">\n                                    <div className=\"col-md-8 col-sm-8\">\n                                        <Select \n                                            id=\"type\"\n                                            value={this.state.column}\n                                            className=\"w_100\"\n                                            defaultActiveFirstOption={false}\n                                            onChange={(e) => this.setState({column:e})}\n                                            placeholder={i18Get('Select Variable', utils.getLanguage())}\n                                            notFoundContent={i18Get('Not Found', utils.getLanguage())} >\n                                            {this.getAttributes()}\n                                        </Select>\n                                    </div>\n                                    <div className=\"col-md-4 col-sm-4 text_align_center\">\n                                        <Button className=\"w_100\" onClick={() => this.setState({value: this.getValue(this.state.column, 'val'), column:undefined})} ><I18 tkey='Add' /></Button>\n                                    </div>\n                                </div> \n                                <label><I18 tkey='Fixed' /></label>\n                                <div className=\"row\">\n                                    <div className=\"col-md-8 col-sm-8\">\n\n                                         <Input type='text' value={this.state.fixedVal} onChange={(e) => this.setState({fixedVal:e.target.value})} />\n                                    </div>\n                                    <div className=\"col-md-4 col-sm-4  text_align_center\">\n                                        <Button className=\"w_100\" onClick={() => this.setState({value: this.getValue(this.state.fixedVal,'val'), fixedVal:undefined})} ><I18 tkey='Add' /></Button>      \n                                    </div>\n                                </div>\n                            </div> \n                        </div>\n                       \n                        <div className='w_100  operation_variable_container'>    \n                            <div className=\"container-fluid position_relative\">   \n                                {this.state.invalidFuncArgs && <span className='user_invalid fixed_label' ><I18 tkey='Invalid function or arguments' /></span>}\n                                <label><I18 tkey='Function' /></label>\n                                <div className=\"row \">\n                                    <div className=\"col-md-8 col-sm-8 padding-bottom-10 \">\n                                        <Select \n                                            id=\"type\"\n                                            value={this.state.func}\n                                            className=\"w_100\"\n                                            defaultActiveFirstOption={false}\n                                            onChange={(e) => this.setState({func:e, invalidFuncArgs:false})}\n                                            placeholder={i18Get('Select Function', utils.getLanguage())}\n                                            notFoundContent={i18Get('Not Found', utils.getLanguage())} >\n                                            {this.getFunctions()}\n                                        </Select>\n                                    </div>\n                                    <div className=\"col-md-4 col-sm-4 padding-bottom-21\">&nbsp;</div>\n                                    <div className=\"container-fluid\">\n                                        \n                                        {this.state.func &&this.getFunctionalArgsColumns()}\n                                       \n                                    </div>\n                                    <div className=\"col-md-offset-8 col-sm-offset-8 col-md-4 col-sm-4 padding-bottom-10 text_align_center\">                                 \n                                        <Button className=\"w_100\" onClick={this.addFunction.bind(this)} ><I18 tkey='Add' /></Button>      \n                                    </div>\n                                  \n                                </div>\n                            </div>\n                        </div>  \n                    </div>           \n                    <div className='width-46-per display_inline_block'>\n                    <div className='w_100  operation_formula_container'>  \n                        <div className=\"formula_head_container\">\n                            <label className='w_100' ><I18 tkey='Formula' /></label>\n                        </div>\n                            <label className='w_100 padding-5' >{this.getStringValue(this.state.value)}</label>\n                        </div>\n                        <div className=\"text_align_center margin-top-10\">\n                            <Button className=\"margin-right-10\" onClick={this.clearVal.bind(this)}><I18 tkey='Clear' /></Button>\n                            <Popover\n                                content={<div><Input type='string' onChange={(e)=> this.setState({variableName: e.target.value})} value={this.state.variableName}/> <div className='text_align_right margin-top-10'><Button onClick={this.addVariable.bind(this)}><I18 tkey='Ok' /></Button></div></div>}\n                                title=\"Variable name\"\n                                trigger=\"click\"\n                                visible={this.state.variableNameVisible}\n                                onVisibleChange={(e) => this.setState({variableNameVisible:e})}\n                                >\n                               <Button><I18 tkey='Add as variable' /></Button>\n                            </Popover>\n                        </div>\n                        <Button className='apply_button' type='primary' onClick={this.onApply.bind(this)}><I18 tkey='Apply' /></Button>\n                    </div>\n                </div>)\n    }\n\n    getStringValue(val) {\n        let value = ''\n        let reg = ''\n        let alias = []\n        this.state.attributes.map(d => {\n            if(alias.findIndex(p=> p.source_alias === d.source_alias) === -1) {\n                alias.push({source_alias:d.source_alias, source_name:d.source_name})\n            }\n        })\n       \n        val.map(d => {\n            alias.map(dd=> {\n                reg =  new RegExp(dd.source_alias, 'g');\n                d = d.replace(reg, dd.source_name);\n            })\n            while (d.search('var.') !== -1) {\n                this.state.variables.map(dd => {\n                    reg = new RegExp('var.'+dd.name, 'g');\n                    d = d.replace(reg, dd.value);\n                }) \n            }\n            value += d + ' ';\n        })\n        return value\n    }\n    clearVal() {\n        let prevState = this.state;\n        prevState.value.pop()\n        this.setState(prevState)\n    }\n    addVariable() {\n        if(this.state.variableName) {\n            if((this.state.attributes.findIndex((p) => p.name === this.state.variableName) == -1) && (this.state.variables.findIndex((p) => p.name === this.state.variableName) == -1)) {\n                if(this.validate()) {\n                    let prevState = this.state;\n                    prevState.variableNameVisible = false;\n                    prevState.variables.push({name:this.state.variableName, value: `(${this.getFinalStringValue(this.state.value)})`});\n                    prevState.variableName = '';\n                    prevState.value = [];\n                    this.setState(prevState)\n                }\n               \n            }\n            else {\n                utils.showInfo(i18Get('Variable already exists'))\n            }\n            \n        }\n       \n    }\n}   \n\n\n\n\nexport default Operation;","import React, { Component } from 'react'\nimport Operation from './lib'\nclass App extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n       \n      };\n  }\n\n  render() {\n    return (<div className='col-md-8'>\n      <Operation\n         type={'ALL'}\n         value={this.state.value}\n         attributes={[\n                {name: 'col-1', source_alias: 'tab1', source_name:'tableOne'},\n                {name: 'col-2', source_alias: 'tab1', source_name:'tableOne'},\n                {name: 'column-1', source_alias: 'tab2', source_name:'tableTwo'}\n         ]}\n         onChange={(e) => {console.log('value', e); this.setState({value:e})}}/>               \n    </div>)\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();"],"sourceRoot":""}